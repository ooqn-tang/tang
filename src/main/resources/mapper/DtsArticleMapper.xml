<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ttcxy.mapper.DtsArticleMapper">
  <resultMap id="BaseResultMap" type="cn.ttcxy.entity.model.DtsArticle">
    <id column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author_id" jdbcType="VARCHAR" property="authorId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="synopsis" jdbcType="VARCHAR" property="synopsis" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.ttcxy.entity.model.DtsArticle">
    <result column="text1" jdbcType="LONGVARCHAR" property="text1" />
    <result column="markdown1" jdbcType="LONGVARCHAR" property="markdown1" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, title, author_id, create_date, update_date, `state`, synopsis
  </sql>
  <sql id="Blob_Column_List">
    text1, markdown1
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.ttcxy.entity.model.DtsArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dts_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.ttcxy.entity.model.DtsArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dts_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dts_article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dts_article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ttcxy.entity.model.DtsArticleExample">
    delete from dts_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ttcxy.entity.model.DtsArticle">
    insert into dts_article (article_id, title, author_id, 
      create_date, update_date, `state`, 
      synopsis, text1, markdown1
      )
    values (#{articleId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{authorId,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{synopsis,jdbcType=VARCHAR}, #{text1,jdbcType=LONGVARCHAR}, #{markdown1,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.ttcxy.entity.model.DtsArticle">
    insert into dts_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="synopsis != null">
        synopsis,
      </if>
      <if test="text1 != null">
        text1,
      </if>
      <if test="markdown1 != null">
        markdown1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="synopsis != null">
        #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="text1 != null">
        #{text1,jdbcType=LONGVARCHAR},
      </if>
      <if test="markdown1 != null">
        #{markdown1,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ttcxy.entity.model.DtsArticleExample" resultType="java.lang.Long">
    select count(*) from dts_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dts_article
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.synopsis != null">
        synopsis = #{record.synopsis,jdbcType=VARCHAR},
      </if>
      <if test="record.text1 != null">
        text1 = #{record.text1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.markdown1 != null">
        markdown1 = #{record.markdown1,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dts_article
    set article_id = #{record.articleId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      `state` = #{record.state,jdbcType=INTEGER},
      synopsis = #{record.synopsis,jdbcType=VARCHAR},
      text1 = #{record.text1,jdbcType=LONGVARCHAR},
      markdown1 = #{record.markdown1,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dts_article
    set article_id = #{record.articleId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      `state` = #{record.state,jdbcType=INTEGER},
      synopsis = #{record.synopsis,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ttcxy.entity.model.DtsArticle">
    update dts_article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="synopsis != null">
        synopsis = #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="text1 != null">
        text1 = #{text1,jdbcType=LONGVARCHAR},
      </if>
      <if test="markdown1 != null">
        markdown1 = #{markdown1,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.ttcxy.entity.model.DtsArticle">
    update dts_article
    set title = #{title,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=INTEGER},
      synopsis = #{synopsis,jdbcType=VARCHAR},
      text1 = #{text1,jdbcType=LONGVARCHAR},
      markdown1 = #{markdown1,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ttcxy.entity.model.DtsArticle">
    update dts_article
    set title = #{title,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=INTEGER},
      synopsis = #{synopsis,jdbcType=VARCHAR}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
</mapper>