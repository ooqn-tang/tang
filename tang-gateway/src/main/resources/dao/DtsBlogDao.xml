<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ttcxy.tang.gateway.dao.DtsBlogDao">
    <resultMap id="BlogResult" type="net.ttcxy.tang.gateway.entity.dto.DtsBlogDto">
        <id column="blog_id" property="blogId"/>
        <result column="title" property="title"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="synopsis" property="synopsis"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="text" property="text"/>
        <collection column="BLOG_ID" ofType="net.ttcxy.tang.gateway.entity.model.DtsBlogTag" property="tagList">
            <id property="blogTagId"  column="BLOG_TAG_ID"/>
            <result property="tagName" column="TAG_NAME"/>
        </collection>
    </resultMap>

    <select id="search" resultMap="BlogResult">
        SELECT A.USERNAME ,A.NICKNAME ,B.BLOG_ID,B.TITLE  ,B.CREATE_DATE ,B.SYNOPSIS ,BT.BLOG_TAG_ID ,BT.TAG_NAME
        FROM UTS_AUTHOR A
        INNER JOIN DTS_BLOG B ON A.AUTHOR_ID = B.AUTHOR_ID AND B.STATE_CODE = 1001 AND B.TITLE LIKE concat('%',#{title},'%')
        LEFT JOIN DTS_BLOG_TAG_RELATION DBTR ON DBTR.BLOG_ID = B.BLOG_ID
        LEFT JOIN DTS_BLOG_TAG BT ON BT.BLOG_TAG_ID = DBTR.BLOG_TAG_ID
        ORDER BY B.CREATE_DATE DESC
    </select>

    <select id="selectBlogById" resultMap="BlogResult">
        SELECT A1.USERNAME ,A1.NICKNAME ,B1.BLOG_ID ,B1.TITLE ,B1.CREATE_DATE ,B1.SYNOPSIS ,B1.TEXT ,BT1.BLOG_TAG_ID ,BT1.TAG_NAME
        FROM DTS_BLOG B1
        INNER JOIN UTS_AUTHOR A1 ON B1.BLOG_ID = #{id} AND B1.AUTHOR_ID = A1.AUTHOR_ID
        LEFT JOIN DTS_BLOG_TAG_RELATION BTR1 ON BTR1.BLOG_ID = B1.BLOG_ID
        LEFT JOIN DTS_BLOG_TAG BT1 ON BT1.BLOG_TAG_ID = BTR1.BLOG_TAG_ID
    </select>

    <select id="selectLikeBlogs" resultMap="BlogResult">
        SELECT A2.USERNAME ,A2.NICKNAME ,B1.BLOG_ID ,B1.TITLE ,B1.CREATE_DATE ,B1.SYNOPSIS ,BT1.BLOG_TAG_ID ,BT1.TAG_NAME
        FROM UTS_AUTHOR A1
        INNER JOIN DTS_LIKE_BLOG LD1 ON A1.USERNAME = #{username} AND LD1.AUTHOR_ID = A1.AUTHOR_ID
        INNER JOIN DTS_BLOG  B1 ON B1.BLOG_ID = LD1.BLOG_ID
        INNER JOIN UTS_AUTHOR A2 ON A2.AUTHOR_ID = LD1.AUTHOR_ID
        LEFT JOIN DTS_BLOG_TAG_RELATION BTR1 ON BTR1.BLOG_ID = B1.BLOG_ID
        LEFT JOIN DTS_BLOG_TAG BT1 ON BT1.BLOG_TAG_ID = BTR1.BLOG_TAG_ID
        ORDER BY LD1.CREATE_DATE DESC
    </select>

    <select id="selectBlogListByUsername" resultMap="BlogResult">
        SELECT A.USERNAME ,A.NICKNAME ,B.BLOG_ID ,B.TITLE ,B.CREATE_DATE ,B.SYNOPSIS ,BT.BLOG_TAG_ID ,BT.TAG_NAME
        FROM UTS_AUTHOR A
        LEFT JOIN DTS_BLOG B ON A.AUTHOR_ID = B.AUTHOR_ID AND A.USERNAME = #{username}
        LEFT JOIN DTS_BLOG_TAG_RELATION DBTR ON DBTR.BLOG_ID = B.BLOG_ID
        LEFT JOIN DTS_BLOG_TAG BT ON BT.BLOG_TAG_ID = DBTR.BLOG_TAG_ID
        AND  B.STATE_CODE = 1001
        ORDER BY B.CREATE_DATE DESC
    </select>

    <select id="selectBlogList" resultMap="BlogResult">
        SELECT A.USERNAME ,A.NICKNAME ,B.BLOG_ID ,B.TITLE ,B.CREATE_DATE ,B.SYNOPSIS ,BT.BLOG_TAG_ID ,BT.TAG_NAME
        FROM UTS_AUTHOR A
        LEFT JOIN DTS_BLOG B ON A.AUTHOR_ID = B.AUTHOR_ID
        LEFT JOIN DTS_BLOG_TAG_RELATION DBTR ON DBTR.BLOG_ID = B.BLOG_ID
        LEFT JOIN DTS_BLOG_TAG BT ON BT.BLOG_TAG_ID = DBTR.BLOG_TAG_ID
        <where>
            <if test="tagName != ''">
                upper(BT.TAG_NAME) = upper(#{tagName})
            </if>
            AND B.STATE_CODE = 1001
        </where>
        ORDER BY B.CREATE_DATE DESC
    </select>
</mapper>