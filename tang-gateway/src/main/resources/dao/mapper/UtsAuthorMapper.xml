<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ttcxy.tang.gateway.dao.mapper.UtsAuthorMapper">
  <resultMap id="BaseResultMap" type="net.ttcxy.tang.gateway.entity.model.UtsAuthor">
    <id column="AUTHOR_ID" jdbcType="VARCHAR" property="authorId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="MAIL" jdbcType="VARCHAR" property="mail" />
    <result column="SIGNATURE" jdbcType="VARCHAR" property="signature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    AUTHOR_ID, USERNAME, NICKNAME, PASSWORD, MAIL, SIGNATURE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from UTS_AUTHOR
    where AUTHOR_ID = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from UTS_AUTHOR
    where AUTHOR_ID = #{authorId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.ttcxy.tang.gateway.entity.model.UtsAuthorExample">
    delete from UTS_AUTHOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.ttcxy.tang.gateway.entity.model.UtsAuthor">
    insert into UTS_AUTHOR (AUTHOR_ID, USERNAME, NICKNAME, 
      PASSWORD, MAIL, SIGNATURE
      )
    values (#{authorId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.ttcxy.tang.gateway.entity.model.UtsAuthor">
    insert into UTS_AUTHOR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        AUTHOR_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="nickname != null">
        NICKNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="mail != null">
        MAIL,
      </if>
      <if test="signature != null">
        SIGNATURE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.ttcxy.tang.gateway.entity.model.UtsAuthorExample" resultType="java.lang.Long">
    select count(*) from UTS_AUTHOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update UTS_AUTHOR
    <set>
      <if test="record.authorId != null">
        AUTHOR_ID = #{record.authorId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        MAIL = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        SIGNATURE = #{record.signature,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update UTS_AUTHOR
    set AUTHOR_ID = #{record.authorId,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      MAIL = #{record.mail,jdbcType=VARCHAR},
      SIGNATURE = #{record.signature,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.ttcxy.tang.gateway.entity.model.UtsAuthor">
    update UTS_AUTHOR
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        MAIL = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        SIGNATURE = #{signature,jdbcType=VARCHAR},
      </if>
    </set>
    where AUTHOR_ID = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.ttcxy.tang.gateway.entity.model.UtsAuthor">
    update UTS_AUTHOR
    set USERNAME = #{username,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      MAIL = #{mail,jdbcType=VARCHAR},
      SIGNATURE = #{signature,jdbcType=VARCHAR}
    where AUTHOR_ID = #{authorId,jdbcType=VARCHAR}
  </update>
</mapper>