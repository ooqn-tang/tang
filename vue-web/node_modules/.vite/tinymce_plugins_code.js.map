{
  "version": 3,
  "sources": ["../tinymce/plugins/code/plugin.js", "../tinymce/plugins/code/index.js", "dep:tinymce_plugins_code"],
  "sourcesContent": ["/**\n * TinyMCE version 6.1.0 (2022-06-29)\n */\n\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const setContent = (editor, html) => {\n      editor.focus();\n      editor.undoManager.transact(() => {\n        editor.setContent(html);\n      });\n      editor.selection.setCursorLocation();\n      editor.nodeChanged();\n    };\n    const getContent = editor => {\n      return editor.getContent({ source_view: true });\n    };\n\n    const open = editor => {\n      const editorContent = getContent(editor);\n      editor.windowManager.open({\n        title: 'Source Code',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'textarea',\n              name: 'code'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: { code: editorContent },\n        onSubmit: api => {\n          setContent(editor, api.getData().code);\n          api.close();\n        }\n      });\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mceCodeEditor', () => {\n        open(editor);\n      });\n    };\n\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceCodeEditor');\n      editor.ui.registry.addButton('code', {\n        icon: 'sourcecode',\n        tooltip: 'Source code',\n        onAction\n      });\n      editor.ui.registry.addMenuItem('code', {\n        icon: 'sourcecode',\n        text: 'Source code',\n        onAction\n      });\n    };\n\n    var Plugin = () => {\n      global.add('code', editor => {\n        register$1(editor);\n        register(editor);\n        return {};\n      });\n    };\n\n    Plugin();\n\n})();\n", "// Exports the \"code\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/code')\n//   ES2015:\n//     import 'tinymce/plugins/code'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/code/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAIA,IAAC,YAAY;AACT;AAEA,UAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ;AAExC,YAAM,aAAa,CAAC,QAAQ,SAAS;AACnC,eAAO;AACP,eAAO,YAAY,SAAS,MAAM;AAChC,iBAAO,WAAW;AAAA;AAEpB,eAAO,UAAU;AACjB,eAAO;AAAA;AAET,YAAM,aAAa,YAAU;AAC3B,eAAO,OAAO,WAAW,EAAE,aAAa;AAAA;AAG1C,YAAM,OAAO,YAAU;AACrB,cAAM,gBAAgB,WAAW;AACjC,eAAO,cAAc,KAAK;AAAA,UACxB,OAAO;AAAA,UACP,MAAM;AAAA,UACN,MAAM;AAAA,YACJ,MAAM;AAAA,YACN,OAAO,CAAC;AAAA,cACJ,MAAM;AAAA,cACN,MAAM;AAAA;AAAA;AAAA,UAGZ,SAAS;AAAA,YACP;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA;AAAA,YAER;AAAA,cACE,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA;AAAA;AAAA,UAGb,aAAa,EAAE,MAAM;AAAA,UACrB,UAAU,SAAO;AACf,uBAAW,QAAQ,IAAI,UAAU;AACjC,gBAAI;AAAA;AAAA;AAAA;AAKV,YAAM,aAAa,YAAU;AAC3B,eAAO,WAAW,iBAAiB,MAAM;AACvC,eAAK;AAAA;AAAA;AAIT,YAAM,WAAW,YAAU;AACzB,cAAM,WAAW,MAAM,OAAO,YAAY;AAC1C,eAAO,GAAG,SAAS,UAAU,QAAQ;AAAA,UACnC,MAAM;AAAA,UACN,SAAS;AAAA,UACT;AAAA;AAEF,eAAO,GAAG,SAAS,YAAY,QAAQ;AAAA,UACrC,MAAM;AAAA,UACN,MAAM;AAAA,UACN;AAAA;AAAA;AAIJ,UAAI,SAAS,MAAM;AACjB,eAAO,IAAI,QAAQ,YAAU;AAC3B,qBAAW;AACX,mBAAS;AACT,iBAAO;AAAA;AAAA;AAIX;AAAA;AAAA;AAAA;;;AClFJ;AAAA;AAMA;AAAA;AAAA;;;ACNA,IAAO,+BAAQ;",
  "names": []
}
