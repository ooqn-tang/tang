"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.avatarGroupInjectionKey = void 0;
const vue_1 = require("vue");
const Avatar_1 = __importDefault(require("./Avatar"));
const _mixins_1 = require("../../_mixins");
const avatar_group_cssr_1 = __importDefault(require("./styles/avatar-group.cssr"));
exports.avatarGroupInjectionKey = Symbol('avatar-group');
const avatarGroupProps = {
    max: Number,
    maxStyle: [Object, String],
    options: {
        type: Array,
        default: () => []
    },
    vertical: Boolean,
    size: [String, Number]
};
exports.default = (0, vue_1.defineComponent)({
    name: 'AvatarGroup',
    props: avatarGroupProps,
    setup(props) {
        const { mergedClsPrefixRef } = (0, _mixins_1.useConfig)(props);
        (0, _mixins_1.useStyle)('AvatarGroup', avatar_group_cssr_1.default, mergedClsPrefixRef);
        (0, vue_1.provide)(exports.avatarGroupInjectionKey, props);
        const restOptionsRef = (0, vue_1.computed)(() => {
            const { max } = props;
            if (max === undefined)
                return undefined;
            const { options } = props;
            return options.slice(max, options.length);
        });
        const displayedOptionsRef = (0, vue_1.computed)(() => {
            const { options, max } = props;
            if (max === undefined)
                return options;
            if (options.length > max)
                return options.slice(0, max - 1);
            if (options.length === max)
                return options.slice(0, max);
            return options;
        });
        return {
            mergedClsPrefix: mergedClsPrefixRef,
            restOptions: restOptionsRef,
            displayedOptions: displayedOptionsRef
        };
    },
    render() {
        const { mergedClsPrefix, displayedOptions, restOptions, $slots } = this;
        return ((0, vue_1.h)("div", { class: [
                `${mergedClsPrefix}-avatar-group`,
                this.vertical && `${mergedClsPrefix}-avatar-group--vertical`
            ], role: "group" },
            displayedOptions.map((option) => {
                return $slots.avatar ? ($slots.avatar({ option })) : ((0, vue_1.h)(Avatar_1.default, { src: option.src }));
            }),
            restOptions !== undefined &&
                restOptions.length > 0 &&
                ($slots.rest ? ($slots.rest({ options: restOptions, rest: restOptions.length })) : ((0, vue_1.h)(Avatar_1.default, { style: this.maxStyle }, {
                    default: () => `+${restOptions.length}`
                })))));
    }
});
